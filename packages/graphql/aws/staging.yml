AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Animavita GraphQL server on staging environment

Resources:
  AnimavitaGraphQLFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../build
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: staging
      Variables:
        LambdaFunctionName: !Ref AnimavitaGraphQLFunction

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource: arn:aws:s3:::animavita/*

  LambdaApiGatewayExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AnimavitaGraphQLFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref ApiGateway
          - '/*/*'

  BucketPolicyLambdaUploadFiles:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: animavita
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt LambdaExecutionRole.Arn
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Resource: arn:aws:s3:::animavita/*

Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Join
      - ''
      - - https://
        - !Ref AWS::Region
        - '.console.aws.amazon.com/lambda/home?region='
        - !Ref AWS::Region
        - '#/functions/'
        - !Ref AnimavitaGraphQLFunction

  ApiGatewayConsoleUrl:
    Description: Console URL for the API Gateway API's Stage.
    Value: !Join
      - ''
      - - https://
        - !Ref AWS::Region
        - '.console.aws.amazon.com/apigateway/home?region='
        - !Ref AWS::Region
        - '#/apis/'
        - !Ref ApiGateway
        - '/stages/staging'

  ApiUrl:
    Description: Invoke URL
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGateway
        - '.execute-api.'
        - !Ref AWS::Region
        - '.amazonaws.com/staging/'
